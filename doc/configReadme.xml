<?xml version="1.0"?>
<configuration>
	<placeholders>
		<placeholder id="template_name">Salesforce to Netsuite Opportunity Aggregation</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">
As an administrator I want to aggregate opportunities from Salesforce and NetSuite instances and compare them to see which opportunities can only be found in one of the two and which opportunities are in both instances.

For practical purposes this Template will generate the result in the format of an e-mail with attached CSV Report.

This Template should serve as a foundation for extracting data from two systems, aggregating data, comparing values of fields for the objects, and generating a report on the differences.

This implementation retrieves opportunities from both Salesforce and Netsuite instances, compares them (opportunities match if the names are equal), and generates a CSV file which shows opportunities in Salesforce, opportunities in NetSuite, and opportunities present in both systems. The report is then sent to a configured group of e-mail addresses.
		</section>
		<section id="considerations">
<![CDATA[
To make this Anypoint Template run, there are certain preconditions that must be considered. All of them deal with the preparations in both systems, that must be made in order for all to run smoothly. **Failling to do so could lead to unexpected behavior of the template.**
]]>
		</section>

		<section id="running_on_cloudhub">
<![CDATA[
Once your app is all set up and started, supposing you choose as domain name `sfdc2nets-opportunity-aggregation` to trigger the use case, you just need to hit `http://sfdc2nets-opportunity-aggregation.cloudhub.io/generatereport` and report will be sent to the e-mails configured.
]]>
		</section>
		<section id="running_on_standalone">
<![CDATA[
After this, to trigger the use case you just need to hit the local HTTP endpoint with the port you configured in your file. If this is, for instance, `9090` then you should hit: `http://localhost:9090/generatereport` and this will create a CSV report and send it to the configured e-mail addresses.
]]>
		</section>
		<section id="application_configuration">
		<![CDATA[
#### HTTP Connector configuration
+ http.port `9090`

#### SalesForce Connector configuration
+ sfdc.a.username `bob.dylan@org`
+ sfdc.a.password `DylanPassword123`
+ sfdc.a.securityToken `avsfwCUl7apQs56Xq2AKi3X`

#### SMTP Services configuration
+ smtp.host `smtp.gmail.com`
+ smtp.port `587`
+ smtp.user `exampleuser@gmail.com`
+ smtp.password `ExamplePassword456`

#### Mail details
+ mail.from `exampleuser@gmail.com`
+ mail.to `woody.guthrie@gmail.com`
+ mail.subject `Opportunities Report`
+ mail.body `Please find attached your Opportunities Report`
+ attachment.name `opportunities_report.csv`

#### NetSuite Connector configuration

+ netsuite.email `email@example.com`
+ netsuite.password `netsuite_password`
+ netsuite.account `YHCtmLGOdrjkKvBruTKaiLan`
+ netsuite.roleId `1`
+ netsuite.appId `77EBCBD6-AF9F-11E5-BF7F-FEFF819CDC9F`
+ netsuite.connectionTimeout `100000`
+ netsuite.readTimeout `100000`
]]>
		</section>
		<section id="api_calls">
		<![CDATA[
Salesforce imposes limits on the number of API Calls that can be made. However, we make API call to Salesforce only once during aggregation.
]]>
		</section>
		<section id="default_endpoints_xml">
		<![CDATA[
This is the file where you will found the endpoint to start the aggregation. This Template has an HTTP Inbound Endpoint as the way to trigger the use case.

$H$H# Trigger Flow
**HTTP Inbound Endpoint** - Start Report Generation
+ `${http.port}` is set as a property to be defined either on a property file or in CloudHub environment variables.
+ The path configured by default is `generatereport` and you are free to change for the one you prefer.
+ The host name for all endpoints in your CloudHub configuration should be defined as `localhost`. CloudHub will then route requests from your application domain URL to the endpoint.

]]>
		</section>
		<section id="default_business_logic_xml">
		<![CDATA[
Functional aspect of the Template is implemented on this XML, directed by one flow responsible of conducting the aggregation of data, comparing records and finally formating the output, in this case being a report.

Using Scatter-Gather component we are querying the data in different systems. After that the aggregation is implemented in DataWeave 2 script using Transform component.
Aggregated results are sorted by source of existence:

1. Opportunities only in Salesforce
2. Opportunities only in Netsuite
3. Opportunities in both Salesforce and Netsuite

and transformed to CSV format. Final report in CSV format is sent to email, that you configured in mule.*.properties file.
]]>
		</section>
	</sections>
</configuration>
